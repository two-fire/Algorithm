两路合并排序：最好、最坏、平均情况下的时间复杂度均为 O(nlogn)。 
快速排序：最好、平均情况下的时间复杂度为 O(nlogn)，最坏情况下为 O(n2)。 
BFPTR算法：O（n)

随机数的产生是由 srand 函数以 time 函数值（即当前时间）作为种子，rand 函数产生一个 0-RAND_MAX 范围内的随机数。
int num = rand() % (b-a+1) +a; 其中的a是起始值，b是终止值，(b-a+1)是范围,包含两个头文件 time.h 和 stdlib.h。

